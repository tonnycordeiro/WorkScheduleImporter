<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converters="clr-namespace:WorkScheduleImporter.AddIn.Views.Converters"                    
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit">

    <!--************************Style for buttons************************-->
    <LinearGradientBrush x:Key="ButtonBackground" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="Gainsboro" Offset="0.445"/>
        <GradientStop Color="GhostWhite" Offset="0.53"/>
    </LinearGradientBrush>

    <Style TargetType="Button" x:Key="DefaultTextImageButton">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="52" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="DarkSlateGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="BorderDefault" Background="{StaticResource ButtonBackground}" VerticalAlignment="Stretch" BorderThickness="1,2,2,1" BorderBrush="LightGray" CornerRadius="2" HorizontalAlignment="Stretch"/>
                        <Border x:Name="BorderPressed" Opacity="0" Background="LightGray" VerticalAlignment="Stretch" CornerRadius="2" HorizontalAlignment="Stretch"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderDefault" Property="BorderThickness" Value="2,1,1,2"></Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="DefaultTextImageToggleButton">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="52" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="DarkSlateGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="BorderDefault" Background="{StaticResource ButtonBackground}" VerticalAlignment="Stretch" BorderThickness="1,2,2,1" BorderBrush="LightGray" CornerRadius="2" HorizontalAlignment="Stretch"/>
                        <Border x:Name="BorderPressed" Opacity="0" Background="LightGray" VerticalAlignment="Stretch" CornerRadius="2" HorizontalAlignment="Stretch"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BorderDefault" Property="BorderThickness" Value="2,1,1,2"></Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--************************End Style for buttons************************-->


    <!--************************Style for GRID************************-->
    <Style x:Key="DefaultColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource HeaderBrush}" />
        <Setter Property="Foreground" Value="DarkSlateGray" />
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="Clique para ordenar"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="Gray" Offset="0"/>
        <GradientStop Color="Gainsboro" Offset="0.1"/>
        <GradientStop Color="GhostWhite" Offset="0.5"/>
        <GradientStop Color="Gainsboro" Offset="0.9"/>
        <GradientStop Color="Gray" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="GhostWhite" Offset="0.6"/>
        <GradientStop Color="Gainsboro" Offset="0.8"/>
        <GradientStop Color="Gray" Offset="1"/>
    </LinearGradientBrush>
    <!--************************End Style for GRID************************-->
    
    <!-- Style for TextBox -->
    <Style x:Key="TextBoxDisabled" TargetType="TextBox" BasedOn="{StaticResource ResourceKey={x:Type TextBox}}">
        <Setter Property="IsReadOnly" Value="True" />
        <!--<Setter Property="IsEnabled" Value="False" />-->
        <Setter Property="Background" Value="LightCyan" />
    </Style>
    <!-- End Style for TextBox -->

    <!-- Converters -->
    <converters:ReportValidationToMessageConverter x:Key="ReportValidationToMessageConverter" />
    <converters:ValidationLevelImageConverter x:Key="ValidationLevelImageConverter" />
    <!-- End converters -->
    
</ResourceDictionary>